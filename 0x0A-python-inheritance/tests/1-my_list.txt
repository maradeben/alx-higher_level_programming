Tests for MyList module
===============================

	>>> MyList = __import__("1-my_list").MyList

Example:
Test case for MyList inheriting from list
	>>> issubclass(MyList, list)
	True
	
Test case to see class instance was created
	>>> my_list = MyList()
	>>> isinstance(my_list, MyList)
	True

Test case: mylist is instance of the MyList parent class, list
	>>> isinstance(my_list, list)
	True

Test case: appending works correctly
	>>> my_list.append(9)
	>>> print(my_list)
	[9]

Test case: sorting works correctly
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> my_list.append(1)
	>>> print(sorted(my_list))
	[1, 3, 5, 9]

Test case: print_sorted gives same output as above
	>>> my_list.print_sorted()
	[1, 3, 5, 9]

Test case: list remains unchanged, i.e. list is not changed
	>>> print(my_list)
	[9, 3, 5, 1]

Test case: appending float to list
	>>> my_list.append(4.3)

Test case: sorting with float
	>>> my_list.print_sorted()
	[1, 3, 4.3, 5, 9]

Test case: appending string
	>>> my_list.append("a string")

Test case: sorting with string
	>>> my_list.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'str' and 'float'

Test case: print empty list
	>>> empty_list = MyList()
	>>> empty_list.print_sorted()
	[]
